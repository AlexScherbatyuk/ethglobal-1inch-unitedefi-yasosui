{"abi":[{"type":"function","name":"cancel","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getFactoryAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getHashlock","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"rescueFunds","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setHashlock","inputs":[{"name":"hashlock","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"secret","type":"bytes32","internalType":"bytes32"},{"name":"target","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"EscrowCancelled","inputs":[],"anonymous":false},{"type":"event","name":"FundsRescued","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Withdrawal","inputs":[{"name":"secret","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"error","name":"InvalidCaller","inputs":[]},{"type":"error","name":"InvalidFactory","inputs":[]},{"type":"error","name":"InvalidImmutables","inputs":[]},{"type":"error","name":"InvalidSecret","inputs":[]},{"type":"error","name":"InvalidTime","inputs":[]},{"type":"error","name":"NativeTokenSendingFailure","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"cancel(address,address,uint256)":"30922dfd","getFactoryAddress()":"a9c2e36c","getHashlock()":"cafc853c","rescueFunds(address,uint256)":"78e3214f","setHashlock(bytes32)":"c1dfc98d","withdraw(bytes32,address,address,uint256)":"8e0cc176"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFactory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHashlock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"}],\"name\":\"setHashlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alexander Scherbatyuk\",\"details\":\"This interface is used to create escrow contracts for the source and destination chains.This interface is used purely for UniteDeFi 1inch / ETHGlobal hackathon.\",\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel(address,address,uint256)\":{\"details\":\"The escrow can only be cancelled. The safety deposit is sent to the caller.\",\"params\":{\"amount\":\"The amount of tokens to rescue.\",\"token\":\"The address of the token to rescue. Zero address for native token.\",\"user\":\"The address of the user ether maker or taker.\"}},\"rescueFunds(address,uint256)\":{\"details\":\"Funds can only be rescued.\",\"params\":{\"amount\":\"The amount of tokens to rescue.\",\"token\":\"The address of the token to rescue. Zero address for native token.\"}},\"setHashlock(bytes32)\":{\"details\":\"Only callable by the factory.\",\"params\":{\"hashlock\":\"The hashlock to set.\"}},\"withdraw(bytes32,address,address,uint256)\":{\"details\":\"Withdrawal can only be made with secret with hash matches the hashlock. The safety deposit is sent to the caller.\",\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"secret\":\"The secret that unlocks the escrow.\",\"target\":\"The address to transfer ERC20 tokens to.\",\"token\":\"The address of the token to transfer.\"}}},\"title\":\"CustomBaseEscrow interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"cancel(address,address,uint256)\":{\"notice\":\"Cancels the escrow and returns tokens to a predetermined recipient.\"},\"getFactoryAddress()\":{\"notice\":\"Returns the address of the factory that created the escrow.\"},\"getHashlock()\":{\"notice\":\"Returns the hashlock of the escrow.\"},\"rescueFunds(address,uint256)\":{\"notice\":\"Rescues funds from the escrow.\"},\"setHashlock(bytes32)\":{\"notice\":\"Sets the hashlock for the escrow.\"},\"withdraw(bytes32,address,address,uint256)\":{\"notice\":\"Withdraws funds to a predetermined recipient.\"}},\"notice\":\"Simple implementation of BaseEscrow interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ICustomBaseEscrow.sol\":\"ICustomBaseEscrow\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@1inch/limit-order-protocol-contract/=lib/cross-chain-swap/lib/limit-order-protocol/\",\":@1inch/limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/\",\":@1inch/solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":cross-chain-swap/=lib/cross-chain-swap/contracts/\",\":ds-test/=lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":limit-order-protocol/=lib/cross-chain-swap/lib/limit-order-protocol/\",\":limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/\",\":murky/=lib/cross-chain-swap/lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/ICustomBaseEscrow.sol\":{\"keccak256\":\"0xd8d6880bc69b56ee82a1158aa044fbaa6aeaf1699fc46483a81c29864773e8b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a82e1eaa84e09efda5e4a4229bf230c913cc7d6ba7b7baa37043079c6dca8aec\",\"dweb:/ipfs/QmcUCW3uKwDWginXjYRvdvBN56aNQYCH1rpZ9V1LTiM5wi\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidCaller"},{"inputs":[],"type":"error","name":"InvalidFactory"},{"inputs":[],"type":"error","name":"InvalidImmutables"},{"inputs":[],"type":"error","name":"InvalidSecret"},{"inputs":[],"type":"error","name":"InvalidTime"},{"inputs":[],"type":"error","name":"NativeTokenSendingFailure"},{"inputs":[],"type":"event","name":"EscrowCancelled","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"FundsRescued","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32","indexed":false}],"type":"event","name":"Withdrawal","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"cancel"},{"inputs":[],"stateMutability":"view","type":"function","name":"getFactoryAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getHashlock","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rescueFunds"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setHashlock"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"internalType":"address","name":"target","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdraw"}],"devdoc":{"kind":"dev","methods":{"cancel(address,address,uint256)":{"details":"The escrow can only be cancelled. The safety deposit is sent to the caller.","params":{"amount":"The amount of tokens to rescue.","token":"The address of the token to rescue. Zero address for native token.","user":"The address of the user ether maker or taker."}},"rescueFunds(address,uint256)":{"details":"Funds can only be rescued.","params":{"amount":"The amount of tokens to rescue.","token":"The address of the token to rescue. Zero address for native token."}},"setHashlock(bytes32)":{"details":"Only callable by the factory.","params":{"hashlock":"The hashlock to set."}},"withdraw(bytes32,address,address,uint256)":{"details":"Withdrawal can only be made with secret with hash matches the hashlock. The safety deposit is sent to the caller.","params":{"amount":"The amount of tokens to transfer.","secret":"The secret that unlocks the escrow.","target":"The address to transfer ERC20 tokens to.","token":"The address of the token to transfer."}}},"version":1},"userdoc":{"kind":"user","methods":{"cancel(address,address,uint256)":{"notice":"Cancels the escrow and returns tokens to a predetermined recipient."},"getFactoryAddress()":{"notice":"Returns the address of the factory that created the escrow."},"getHashlock()":{"notice":"Returns the hashlock of the escrow."},"rescueFunds(address,uint256)":{"notice":"Rescues funds from the escrow."},"setHashlock(bytes32)":{"notice":"Sets the hashlock for the escrow."},"withdraw(bytes32,address,address,uint256)":{"notice":"Withdraws funds to a predetermined recipient."}},"version":1}},"settings":{"remappings":["@1inch/limit-order-protocol-contract/=lib/cross-chain-swap/lib/limit-order-protocol/","@1inch/limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/","@1inch/solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","cross-chain-swap/=lib/cross-chain-swap/contracts/","ds-test/=lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","limit-order-protocol/=lib/cross-chain-swap/lib/limit-order-protocol/","limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/","murky/=lib/cross-chain-swap/lib/murky/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ICustomBaseEscrow.sol":"ICustomBaseEscrow"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"src/interfaces/ICustomBaseEscrow.sol":{"keccak256":"0xd8d6880bc69b56ee82a1158aa044fbaa6aeaf1699fc46483a81c29864773e8b7","urls":["bzz-raw://a82e1eaa84e09efda5e4a4229bf230c913cc7d6ba7b7baa37043079c6dca8aec","dweb:/ipfs/QmcUCW3uKwDWginXjYRvdvBN56aNQYCH1rpZ9V1LTiM5wi"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"id":33}