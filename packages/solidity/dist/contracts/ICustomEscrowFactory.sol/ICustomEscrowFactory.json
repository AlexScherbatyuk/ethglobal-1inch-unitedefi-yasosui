{"abi":[{"type":"function","name":"addressOfEscrowDst","inputs":[{"name":"orderHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"addressOfEscrowSrc","inputs":[{"name":"orderHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"deployDstEscrow","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"safetyDeposit","type":"uint256","internalType":"uint256"},{"name":"orderHash","type":"bytes32","internalType":"bytes32"},{"name":"secretHashlock","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"deploySrcEscrow","inputs":[{"name":"orderHash","type":"bytes32","internalType":"bytes32"},{"name":"maker","type":"address","internalType":"address"},{"name":"makerAsset","type":"address","internalType":"address"},{"name":"makingAmount","type":"uint256","internalType":"uint256"},{"name":"safetyDeposit","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"secretHashlock","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"getEscrowDstImplementation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getEscrowSrcImplementation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"DstEscrowCreated","inputs":[{"name":"escrow","type":"address","indexed":false,"internalType":"address"},{"name":"orderHash","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"sender","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SrcEscrowCreated","inputs":[{"name":"escrow","type":"address","indexed":false,"internalType":"address"},{"name":"orderHash","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"sender","type":"address","indexed":false,"internalType":"address"},{"name":"dstImmutablesComplement","type":"tuple","indexed":false,"internalType":"struct ICustomEscrowFactory.DstImmutablesComplement","components":[{"name":"maker","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"token","type":"address","internalType":"address"},{"name":"safetyDeposit","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]}],"anonymous":false},{"type":"error","name":"InsufficientEscrowBalance","inputs":[]},{"type":"error","name":"InvalidCreationTime","inputs":[]},{"type":"error","name":"InvalidPartialFill","inputs":[]},{"type":"error","name":"InvalidSecretsAmount","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addressOfEscrowDst(bytes32)":"84cb7247","addressOfEscrowSrc(bytes32)":"372408ab","deployDstEscrow(address,uint256,uint256,bytes32,bytes32)":"9df706a5","deploySrcEscrow(bytes32,address,address,uint256,uint256,uint256,bytes32)":"bac30f46","getEscrowDstImplementation()":"55e50032","getEscrowSrcImplementation()":"07f0c085"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientEscrowBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCreationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPartialFill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecretsAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"DstEscrowCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct ICustomEscrowFactory.DstImmutablesComplement\",\"name\":\"dstImmutablesComplement\",\"type\":\"tuple\"}],\"name\":\"SrcEscrowCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"addressOfEscrowDst\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"}],\"name\":\"addressOfEscrowSrc\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"secretHashlock\",\"type\":\"bytes32\"}],\"name\":\"deployDstEscrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"makerAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"safetyDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHashlock\",\"type\":\"bytes32\"}],\"name\":\"deploySrcEscrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEscrowDstImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEscrowSrcImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alexander Scherbatyuk\",\"details\":\"This interface is used to create escrow contracts for the source and destination chains.This interface is used purely for UniteDeFi 1inch / ETHGlobal hackathon.\",\"events\":{\"DstEscrowCreated(address,bytes32,address)\":{\"params\":{\"escrow\":\"The address of the created escrow.\",\"orderHash\":\"The hash of the order.\",\"sender\":\"The address of the sender.\"}},\"SrcEscrowCreated(address,bytes32,address,(address,uint256,address,uint256,uint256))\":{\"params\":{\"dstImmutablesComplement\":\"Additional immutables related to the escrow contract on the destination chain.\",\"escrow\":\"The address of the created escrow.\",\"orderHash\":\"The hash of the order.\",\"sender\":\"The address of the sender.\"}}},\"kind\":\"dev\",\"methods\":{\"addressOfEscrowDst(bytes32)\":{\"params\":{\"orderHash\":\"The order hash used to compute the salt.\"},\"returns\":{\"_0\":\"The computed address of the escrow.\"}},\"addressOfEscrowSrc(bytes32)\":{\"params\":{\"orderHash\":\"The order hash used to compute the salt.\"},\"returns\":{\"_0\":\"The computed address of the escrow.\"}},\"deployDstEscrow(address,uint256,uint256,bytes32,bytes32)\":{\"details\":\"The caller must send the safety deposit in the native token along with the function call and approve the destination token to be transferred to the created escrow.\",\"params\":{\"amount\":\"The amount of tokens to be deposited.\",\"orderHash\":\"The hashlock for the order.\",\"safetyDeposit\":\"The safety deposit amount in native tokens.\",\"secretHashlock\":\"The hashlock for the secret.\",\"token\":\"The token address to be deposited.\"}},\"deploySrcEscrow(bytes32,address,address,uint256,uint256,uint256,bytes32)\":{\"params\":{\"chainId\":\"The chain ID.\",\"maker\":\"The address of the maker.\",\"makerAsset\":\"The maker's asset address.\",\"makingAmount\":\"The amount of tokens to be filled.\",\"orderHash\":\"The hash of the order.\",\"safetyDeposit\":\"The safety deposit amount in native tokens.\",\"secretHashlock\":\"The hashlock for the secret.\"}},\"getEscrowDstImplementation()\":{\"returns\":{\"_0\":\"The address of implementation on the destination chain.\"}},\"getEscrowSrcImplementation()\":{\"returns\":{\"_0\":\"The address of implementation on the source chain.\"}}},\"title\":\"CustomEscrowFactory interface for cross-chain atomic swap.\",\"version\":1},\"userdoc\":{\"events\":{\"DstEscrowCreated(address,bytes32,address)\":{\"notice\":\"Emitted on EscrowDst deployment.\"},\"SrcEscrowCreated(address,bytes32,address,(address,uint256,address,uint256,uint256))\":{\"notice\":\"Emitted on EscrowSrc deployment to recreate EscrowSrc and EscrowDst immutables off-chain.\"}},\"kind\":\"user\",\"methods\":{\"addressOfEscrowDst(bytes32)\":{\"notice\":\"Returns the deterministic address of the destination escrow based on the salt.\"},\"addressOfEscrowSrc(bytes32)\":{\"notice\":\"Returns the deterministic address of the source escrow based on the salt.\"},\"deployDstEscrow(address,uint256,uint256,bytes32,bytes32)\":{\"notice\":\"Creates a new escrow contract for taker on the destination chain.\"},\"deploySrcEscrow(bytes32,address,address,uint256,uint256,uint256,bytes32)\":{\"notice\":\"Creates a new source escrow contract.\"},\"getEscrowDstImplementation()\":{\"notice\":\"Returns the address of implementation on the destination chain.\"},\"getEscrowSrcImplementation()\":{\"notice\":\"Returns the address of implementation on the source chain.\"}},\"notice\":\"Simple implementation of 1inch Escrow Factory interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ICustomEscrowFactory.sol\":\"ICustomEscrowFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@1inch/limit-order-protocol-contract/=lib/cross-chain-swap/lib/limit-order-protocol/\",\":@1inch/limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/\",\":@1inch/solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":cross-chain-swap/=lib/cross-chain-swap/contracts/\",\":ds-test/=lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":limit-order-protocol/=lib/cross-chain-swap/lib/limit-order-protocol/\",\":limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/\",\":murky/=lib/cross-chain-swap/lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/ICustomBaseEscrow.sol\":{\"keccak256\":\"0x3325b242c6b5200e0c43984e59d11f70c6110ee73112209b2546bf0ff8f79e9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a30f7ff8835e789c003e802831126552d370163274ca8585cbb9b67b59a1e265\",\"dweb:/ipfs/Qmd7wodh3XjfxXnBF4qirDdMDd1SED6pGrNcpsaGzYawb1\"]},\"src/interfaces/ICustomEscrowFactory.sol\":{\"keccak256\":\"0x8a99a07352721eac7aca73749e841b84ddd3353a5d432817c51b493632ca028b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://608c001fd9a3ff6f382f764874e61a23208ed6fa98063305ef614ad7d1f29872\",\"dweb:/ipfs/QmVWytq7ajMcSQLvFc7Y6fKsyCo6cTiJkntMJJuSadQ6c1\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InsufficientEscrowBalance"},{"inputs":[],"type":"error","name":"InvalidCreationTime"},{"inputs":[],"type":"error","name":"InvalidPartialFill"},{"inputs":[],"type":"error","name":"InvalidSecretsAmount"},{"inputs":[{"internalType":"address","name":"escrow","type":"address","indexed":false},{"internalType":"bytes32","name":"orderHash","type":"bytes32","indexed":false},{"internalType":"address","name":"sender","type":"address","indexed":false}],"type":"event","name":"DstEscrowCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"escrow","type":"address","indexed":false},{"internalType":"bytes32","name":"orderHash","type":"bytes32","indexed":false},{"internalType":"address","name":"sender","type":"address","indexed":false},{"internalType":"struct ICustomEscrowFactory.DstImmutablesComplement","name":"dstImmutablesComplement","type":"tuple","components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}],"indexed":false}],"type":"event","name":"SrcEscrowCreated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"addressOfEscrowDst","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"addressOfEscrowSrc","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"bytes32","name":"secretHashlock","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"deployDstEscrow"},{"inputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"makerAsset","type":"address"},{"internalType":"uint256","name":"makingAmount","type":"uint256"},{"internalType":"uint256","name":"safetyDeposit","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"bytes32","name":"secretHashlock","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"deploySrcEscrow"},{"inputs":[],"stateMutability":"view","type":"function","name":"getEscrowDstImplementation","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getEscrowSrcImplementation","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"addressOfEscrowDst(bytes32)":{"params":{"orderHash":"The order hash used to compute the salt."},"returns":{"_0":"The computed address of the escrow."}},"addressOfEscrowSrc(bytes32)":{"params":{"orderHash":"The order hash used to compute the salt."},"returns":{"_0":"The computed address of the escrow."}},"deployDstEscrow(address,uint256,uint256,bytes32,bytes32)":{"details":"The caller must send the safety deposit in the native token along with the function call and approve the destination token to be transferred to the created escrow.","params":{"amount":"The amount of tokens to be deposited.","orderHash":"The hashlock for the order.","safetyDeposit":"The safety deposit amount in native tokens.","secretHashlock":"The hashlock for the secret.","token":"The token address to be deposited."}},"deploySrcEscrow(bytes32,address,address,uint256,uint256,uint256,bytes32)":{"params":{"chainId":"The chain ID.","maker":"The address of the maker.","makerAsset":"The maker's asset address.","makingAmount":"The amount of tokens to be filled.","orderHash":"The hash of the order.","safetyDeposit":"The safety deposit amount in native tokens.","secretHashlock":"The hashlock for the secret."}},"getEscrowDstImplementation()":{"returns":{"_0":"The address of implementation on the destination chain."}},"getEscrowSrcImplementation()":{"returns":{"_0":"The address of implementation on the source chain."}}},"version":1},"userdoc":{"kind":"user","methods":{"addressOfEscrowDst(bytes32)":{"notice":"Returns the deterministic address of the destination escrow based on the salt."},"addressOfEscrowSrc(bytes32)":{"notice":"Returns the deterministic address of the source escrow based on the salt."},"deployDstEscrow(address,uint256,uint256,bytes32,bytes32)":{"notice":"Creates a new escrow contract for taker on the destination chain."},"deploySrcEscrow(bytes32,address,address,uint256,uint256,uint256,bytes32)":{"notice":"Creates a new source escrow contract."},"getEscrowDstImplementation()":{"notice":"Returns the address of implementation on the destination chain."},"getEscrowSrcImplementation()":{"notice":"Returns the address of implementation on the source chain."}},"version":1}},"settings":{"remappings":["@1inch/limit-order-protocol-contract/=lib/cross-chain-swap/lib/limit-order-protocol/","@1inch/limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/","@1inch/solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","cross-chain-swap/=lib/cross-chain-swap/contracts/","ds-test/=lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","limit-order-protocol/=lib/cross-chain-swap/lib/limit-order-protocol/","limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/","murky/=lib/cross-chain-swap/lib/murky/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ICustomEscrowFactory.sol":"ICustomEscrowFactory"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"src/interfaces/ICustomBaseEscrow.sol":{"keccak256":"0x3325b242c6b5200e0c43984e59d11f70c6110ee73112209b2546bf0ff8f79e9d","urls":["bzz-raw://a30f7ff8835e789c003e802831126552d370163274ca8585cbb9b67b59a1e265","dweb:/ipfs/Qmd7wodh3XjfxXnBF4qirDdMDd1SED6pGrNcpsaGzYawb1"],"license":"MIT"},"src/interfaces/ICustomEscrowFactory.sol":{"keccak256":"0x8a99a07352721eac7aca73749e841b84ddd3353a5d432817c51b493632ca028b","urls":["bzz-raw://608c001fd9a3ff6f382f764874e61a23208ed6fa98063305ef614ad7d1f29872","dweb:/ipfs/QmVWytq7ajMcSQLvFc7Y6fKsyCo6cTiJkntMJJuSadQ6c1"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"id":93}