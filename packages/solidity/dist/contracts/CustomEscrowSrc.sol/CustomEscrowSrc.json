{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cancel","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getFactoryAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getHashlock","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"rescueFunds","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setHashlock","inputs":[{"name":"hashlock","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"secret","type":"bytes32","internalType":"bytes32"},{"name":"target","type":"address","internalType":"address"},{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"EscrowCancelled","inputs":[],"anonymous":false},{"type":"event","name":"FundsRescued","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Withdrawal","inputs":[{"name":"secret","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"error","name":"InvalidCaller","inputs":[]},{"type":"error","name":"InvalidFactory","inputs":[]},{"type":"error","name":"InvalidImmutables","inputs":[]},{"type":"error","name":"InvalidSecret","inputs":[]},{"type":"error","name":"InvalidTime","inputs":[]},{"type":"error","name":"NativeTokenSendingFailure","inputs":[]},{"type":"error","name":"SafeERC20FailedOperation","inputs":[{"name":"token","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x60a080604052346100295733608052610650908161002e823960805181818160e101526101810152f35b5f80fdfe6040608081526004361015610012575f80fd5b5f3560e01c806330922dfd1461034b57806378e3214f1461027e5780638e0cc176146101a5578063a9c2e36c14610137578063c1dfc98d1461009a5763cafc853c1461005c575f80fd5b34610096575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610096576020905f549051908152f35b5f80fd5b50346100965760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100965773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361010e576004355f55005b600490517f7a44db95000000000000000000000000000000000000000000000000000000008152fd5b5034610096575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610096576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346100965760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261009657600435906101e1610401565b6044359073ffffffffffffffffffffffffffffffffffffffff821680920361009657835f5260205f205f540361025557916102447f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b949260209460643591610492565b61024e4733610586565b51908152a1005b600483517fabab6bd7000000000000000000000000000000000000000000000000000000008152fd5b503461009657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610096577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac906102d76103de565b6103366024359273ffffffffffffffffffffffffffffffffffffffff83168481155f1461033b57610309915033610586565b51928392836020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0390a1005b610346913390610492565b610309565b346100965760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610096576103b873ffffffffffffffffffffffffffffffffffffffff6103b261039d6103de565b6103a5610401565b9060443593849216610492565b33610586565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a95f80a1005b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361009657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361009657565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761046557604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602080830191825273ffffffffffffffffffffffffffffffffffffffff94909416602483015260448083019590955293815290925f916104f7606482610424565b519082855af11561057b575f513d610572575073ffffffffffffffffffffffffffffffffffffffff81163b155b61052b5750565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f5274afe7000000000000000000000000000000000000000000000000000000008352166004820152fd5b60011415610524565b6040513d5f823e3d90fd5b5f80809381935af13d15610615573d67ffffffffffffffff811161046557604051906105da60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610424565b81525f60203d92013e5b156105eb57565b60046040517f8a0332d5000000000000000000000000000000000000000000000000000000008152fd5b6105e456fea264697066735822122003ca98fe9be0063da4c45490b5b7f9a25813044529ac0713ffc37345c566ca4464736f6c63430008170033","sourceMap":"572:1115:31:-:0;;;;;;;806:10:28;;879:28;572:1115:31;;;;;;806:10:28;572:1115:31;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6040608081526004361015610012575f80fd5b5f3560e01c806330922dfd1461034b57806378e3214f1461027e5780638e0cc176146101a5578063a9c2e36c14610137578063c1dfc98d1461009a5763cafc853c1461005c575f80fd5b34610096575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610096576020905f549051908152f35b5f80fd5b50346100965760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100965773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361010e576004355f55005b600490517f7a44db95000000000000000000000000000000000000000000000000000000008152fd5b5034610096575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610096576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346100965760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261009657600435906101e1610401565b6044359073ffffffffffffffffffffffffffffffffffffffff821680920361009657835f5260205f205f540361025557916102447f0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b949260209460643591610492565b61024e4733610586565b51908152a1005b600483517fabab6bd7000000000000000000000000000000000000000000000000000000008152fd5b503461009657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610096577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac906102d76103de565b6103366024359273ffffffffffffffffffffffffffffffffffffffff83168481155f1461033b57610309915033610586565b51928392836020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0390a1005b610346913390610492565b610309565b346100965760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610096576103b873ffffffffffffffffffffffffffffffffffffffff6103b261039d6103de565b6103a5610401565b9060443593849216610492565b33610586565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a95f80a1005b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361009657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361009657565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761046557604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000602080830191825273ffffffffffffffffffffffffffffffffffffffff94909416602483015260448083019590955293815290925f916104f7606482610424565b519082855af11561057b575f513d610572575073ffffffffffffffffffffffffffffffffffffffff81163b155b61052b5750565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f5274afe7000000000000000000000000000000000000000000000000000000008352166004820152fd5b60011415610524565b6040513d5f823e3d90fd5b5f80809381935af13d15610615573d67ffffffffffffffff811161046557604051906105da60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160183610424565b81525f60203d92013e5b156105eb57565b60046040517f8a0332d5000000000000000000000000000000000000000000000000000000008152fd5b6105e456fea264697066735822122003ca98fe9be0063da4c45490b5b7f9a25813044529ac0713ffc37345c566ca4464736f6c63430008170033","sourceMap":"572:1115:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:15:28;572:1115:31;1236:10:28;:29;1232:58;;572:1115:31;;;;;1232:58:28;572:1115:31;;;1274:16:28;;;;572:1115:31;;;;;;;;;;;;;;;;4456:15:28;572:1115:31;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;4104:104:28;572:1115:31;4104:104:28;572:1115:31;;4104:104:28;572:1115:31;;1115:36:28;1111:64;;572:1115:31;1110:6;1189:18;572:1115;;;;;;1110:6;;:::i;:::-;1152:21;;1140:10;1152:21;:::i;:::-;572:1115;;;;1189:18;572:1115;1111:64:28;572:1115:31;;;1160:15:28;;;;572:1115:31;;;;;;;;;;;;1997:27:28;572:1115:31;;;:::i;:::-;1997:27:28;572:1115:31;;;;;;3342:19:28;;;3338:143;572:1115:31;;;3394:6:28;1963:10;;;3394:6;:::i;:::-;572:1115:31;1997:27:28;;;;572:1115:31;;;;;;;;;;;;;;;;;1997:27:28;;;;572:1115:31;3338:143:28;3463:6;1963:10;;3463:6;;:::i;:::-;3338:143;;572:1115:31;;;;;;;;;;;1639:6;572:1115;1597:6;572:1115;;:::i;:::-;;;:::i;:::-;;;;;;;;1597:6;:::i;:::-;1627:10;1639:6;:::i;:::-;1661:17;572:1115;1661:17;;572:1115;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;1219:160:24;572:1115:31;;;1328:43:24;;;;;;;572:1115:31;;;;;1328:43:24;;;572:1115:31;;;;;;;;;1328:43:24;;;1219:160;;-1:-1:-1;;1328:43:24;572:1115:31;;1328:43:24;:::i;:::-;8507:421;;;;;;;;;-1:-1:-1;8507:421:24;;8942:15;;572:1115:31;;;;8960:26:24;:31;8942:68;8938:146;;1219:160;:::o;8938:146::-;1328:43;572:1115:31;;;;9033:40:24;;;;572:1115:31;9033:40:24;;;572:1115:31;9033:40:24;8942:68;9009:1;8994:16;;8942:68;;8507:421;572:1115:31;8507:421:24;;-1:-1:-1;8507:421:24;;;;;3668:178:28;3755:26;3668:178;;;;;3755:26;;572:1115:31;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3755:26:28;572:1115:31;;;;;;3795:8:28;3791:48;;3668:178::o;3791:48::-;3812:27;572:1115:31;;3812:27:28;;;;572:1115:31;;","linkReferences":{},"immutableReferences":{"40840":[{"start":225,"length":32},{"start":385,"length":32}]}},"methodIdentifiers":{"cancel(address,address,uint256)":"30922dfd","getFactoryAddress()":"a9c2e36c","getHashlock()":"cafc853c","rescueFunds(address,uint256)":"78e3214f","setHashlock(bytes32)":"c1dfc98d","withdraw(bytes32,address,address,uint256)":"8e0cc176"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFactory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidImmutables\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSecret\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTokenSendingFailure\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EscrowCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHashlock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hashlock\",\"type\":\"bytes32\"}],\"name\":\"setHashlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alexander Scherbatyuk\",\"details\":\"This contract is used to create escrow contracts for the source chain.This contract is used purely for UniteDeFi 1inch / ETHGlobal hackathon.\",\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"FundsRescued(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens rescued.\",\"token\":\"The address of the token rescued. Zero address for native token.\"}},\"Withdrawal(bytes32)\":{\"params\":{\"secret\":\"The secret that unlocks the escrow.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel(address,address,uint256)\":{\"details\":\"Transfers ERC20 tokens to the maker and native tokens to the caller.\",\"params\":{\"amount\":\"The amount of tokens to transfer.\",\"token\":\"The address of the token to transfer.\",\"user\":\"The address of the maker.\"}},\"getFactoryAddress()\":{\"returns\":{\"_0\":\"The address of the factory that created the escrow.\"}},\"getHashlock()\":{\"returns\":{\"_0\":\"The hashlock of the escrow.\"}},\"rescueFunds(address,uint256)\":{\"details\":\"This is a custom implementation of the 1inch BaseEscrow contract.This function is used to rescue funds from the escrow.This function does not have check and allow to rescue funds from the escrow to any msg.sender.\",\"params\":{\"amount\":\"The amount of tokens to rescue.\",\"token\":\"The address of the token to rescue. Zero address for native token.\"}},\"setHashlock(bytes32)\":{\"details\":\"Only callable by the factory.\",\"params\":{\"hashlock\":\"The hashlock to set.\"}},\"withdraw(bytes32,address,address,uint256)\":{\"details\":\"Transfers ERC20 tokens to the target and native tokens to the caller.\",\"params\":{\"secret\":\"The secret that unlocks the escrow.\",\"target\":\"The address to transfer ERC20 tokens to.\"}}},\"title\":\"CustomEscrowSrc\",\"version\":1},\"userdoc\":{\"events\":{\"EscrowCancelled()\":{\"notice\":\"Emitted on escrow cancellation.\"},\"FundsRescued(address,uint256)\":{\"notice\":\"Emitted when funds are rescued.\"},\"Withdrawal(bytes32)\":{\"notice\":\"Emitted on successful withdrawal.\"}},\"kind\":\"user\",\"methods\":{\"getFactoryAddress()\":{\"notice\":\"Returns the address of the factory that created the escrow.\"},\"getHashlock()\":{\"notice\":\"Returns the hashlock of the escrow.\"},\"rescueFunds(address,uint256)\":{\"notice\":\"Rescues funds from the escrow.\"},\"setHashlock(bytes32)\":{\"notice\":\"Sets the hashlock for the escrow.\"}},\"notice\":\"CustomEscrowSrc is a custom escrow contract for the source chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/CustomEscrowSrc.sol\":\"CustomEscrowSrc\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@1inch/limit-order-protocol-contract/=lib/cross-chain-swap/lib/limit-order-protocol/\",\":@1inch/limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/\",\":@1inch/solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":cross-chain-swap/=lib/cross-chain-swap/contracts/\",\":ds-test/=lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":limit-order-protocol/=lib/cross-chain-swap/lib/limit-order-protocol/\",\":limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/\",\":murky/=lib/cross-chain-swap/lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/CustomBaseEscrow.sol\":{\"keccak256\":\"0x5ef6fb6a8923e207f329bb6b6773423caa8155af72ef43a7ebce1d8f912f88c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58a9ff536fa73e329c317c7f0d0c6b58ea42f752375b74b8f1692997e3431df6\",\"dweb:/ipfs/QmTQKf8FmwcBSUvXvH5vd1oyKFPXgQW5MPrcvyHWQucBN8\"]},\"src/CustomEscrowSrc.sol\":{\"keccak256\":\"0xbcfab1c5d7e1cc43a7d2cdeeed9b95747704e9e4279b984af3f83bea70edda97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b80abcef8f20e11def9c0565d4494f7921c33ef4abcb1b71315fd83ae7dd6efa\",\"dweb:/ipfs/QmRPqXBbZ3RHv16kpGKXSed1Ys3GcbmxbEQYqX9GSXx92u\"]},\"src/interfaces/ICustomBaseEscrow.sol\":{\"keccak256\":\"0xd8d6880bc69b56ee82a1158aa044fbaa6aeaf1699fc46483a81c29864773e8b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a82e1eaa84e09efda5e4a4229bf230c913cc7d6ba7b7baa37043079c6dca8aec\",\"dweb:/ipfs/QmcUCW3uKwDWginXjYRvdvBN56aNQYCH1rpZ9V1LTiM5wi\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"InvalidCaller"},{"inputs":[],"type":"error","name":"InvalidFactory"},{"inputs":[],"type":"error","name":"InvalidImmutables"},{"inputs":[],"type":"error","name":"InvalidSecret"},{"inputs":[],"type":"error","name":"InvalidTime"},{"inputs":[],"type":"error","name":"NativeTokenSendingFailure"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"type":"error","name":"SafeERC20FailedOperation"},{"inputs":[],"type":"event","name":"EscrowCancelled","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"FundsRescued","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32","indexed":false}],"type":"event","name":"Withdrawal","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"cancel"},{"inputs":[],"stateMutability":"view","type":"function","name":"getFactoryAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getHashlock","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rescueFunds"},{"inputs":[{"internalType":"bytes32","name":"hashlock","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setHashlock"},{"inputs":[{"internalType":"bytes32","name":"secret","type":"bytes32"},{"internalType":"address","name":"target","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdraw"}],"devdoc":{"kind":"dev","methods":{"cancel(address,address,uint256)":{"details":"Transfers ERC20 tokens to the maker and native tokens to the caller.","params":{"amount":"The amount of tokens to transfer.","token":"The address of the token to transfer.","user":"The address of the maker."}},"getFactoryAddress()":{"returns":{"_0":"The address of the factory that created the escrow."}},"getHashlock()":{"returns":{"_0":"The hashlock of the escrow."}},"rescueFunds(address,uint256)":{"details":"This is a custom implementation of the 1inch BaseEscrow contract.This function is used to rescue funds from the escrow.This function does not have check and allow to rescue funds from the escrow to any msg.sender.","params":{"amount":"The amount of tokens to rescue.","token":"The address of the token to rescue. Zero address for native token."}},"setHashlock(bytes32)":{"details":"Only callable by the factory.","params":{"hashlock":"The hashlock to set."}},"withdraw(bytes32,address,address,uint256)":{"details":"Transfers ERC20 tokens to the target and native tokens to the caller.","params":{"secret":"The secret that unlocks the escrow.","target":"The address to transfer ERC20 tokens to."}}},"version":1},"userdoc":{"kind":"user","methods":{"getFactoryAddress()":{"notice":"Returns the address of the factory that created the escrow."},"getHashlock()":{"notice":"Returns the hashlock of the escrow."},"rescueFunds(address,uint256)":{"notice":"Rescues funds from the escrow."},"setHashlock(bytes32)":{"notice":"Sets the hashlock for the escrow."}},"version":1}},"settings":{"remappings":["@1inch/limit-order-protocol-contract/=lib/cross-chain-swap/lib/limit-order-protocol/","@1inch/limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/","@1inch/solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","cross-chain-swap/=lib/cross-chain-swap/contracts/","ds-test/=lib/cross-chain-swap/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","limit-order-protocol/=lib/cross-chain-swap/lib/limit-order-protocol/","limit-order-settlement/=lib/cross-chain-swap/lib/limit-order-settlement/","murky/=lib/cross-chain-swap/lib/murky/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity-utils/=lib/cross-chain-swap/lib/solidity-utils/"],"optimizer":{"enabled":true,"runs":1000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/CustomEscrowSrc.sol":"CustomEscrowSrc"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol":{"keccak256":"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d","urls":["bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100","dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc","urls":["bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037","dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol":{"keccak256":"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44","urls":["bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d","dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2","urls":["bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303","dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5","urls":["bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508","dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c","urls":["bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617","dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"],"license":"MIT"},"src/CustomBaseEscrow.sol":{"keccak256":"0x5ef6fb6a8923e207f329bb6b6773423caa8155af72ef43a7ebce1d8f912f88c6","urls":["bzz-raw://58a9ff536fa73e329c317c7f0d0c6b58ea42f752375b74b8f1692997e3431df6","dweb:/ipfs/QmTQKf8FmwcBSUvXvH5vd1oyKFPXgQW5MPrcvyHWQucBN8"],"license":"MIT"},"src/CustomEscrowSrc.sol":{"keccak256":"0xbcfab1c5d7e1cc43a7d2cdeeed9b95747704e9e4279b984af3f83bea70edda97","urls":["bzz-raw://b80abcef8f20e11def9c0565d4494f7921c33ef4abcb1b71315fd83ae7dd6efa","dweb:/ipfs/QmRPqXBbZ3RHv16kpGKXSed1Ys3GcbmxbEQYqX9GSXx92u"],"license":"MIT"},"src/interfaces/ICustomBaseEscrow.sol":{"keccak256":"0xd8d6880bc69b56ee82a1158aa044fbaa6aeaf1699fc46483a81c29864773e8b7","urls":["bzz-raw://a82e1eaa84e09efda5e4a4229bf230c913cc7d6ba7b7baa37043079c6dca8aec","dweb:/ipfs/QmcUCW3uKwDWginXjYRvdvBN56aNQYCH1rpZ9V1LTiM5wi"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[{"astId":40842,"contract":"src/CustomEscrowSrc.sol:CustomEscrowSrc","label":"s_hashlock","offset":0,"slot":"0","type":"t_bytes32"}],"types":{"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"}}},"id":31}